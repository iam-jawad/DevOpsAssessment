name: 'Deploy'
on:
  workflow_call:
    inputs:
      CLUSTER_NAME:
        required: true
        type: string
      HELM_REVISION_NAME:
        required: true
        type: string
      ECR_REPO:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      AWS_BUCKET_NAME:
        required: true
        type: string
      AWS_BUCKET_KEY_NAME:
        required: true
        type: string

permissions:
  id-token: write 
  contents: read 

env:
  TF_LOG: INFO

jobs:
  terraform-apply:
    name: Applying Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run aws auth
        uses: ./.github/composite-actions/aws-auth
        with:
          AWS_ROLE: ${{ secrets.AWS_ROLE }}
          AWS_REGION: ${{ inputs.AWS_REGION }}

      - name: Terraform setup
        uses: ./.github/composite-actions/terraform-setup
        with:
          AWS_REGION: ${{ inputs.AWS_REGION }}
          AWS_BUCKET_NAME: ${{ inputs.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ inputs.AWS_BUCKET_KEY_NAME }}

      - name: Get tfvars file from secret
        env: 
          vars_file: ${{ secrets.TF_VARS }}
        if: ${{ env.vars_file != '' }}
        working-directory: ./terraform-code
        run: echo "${{ secrets.TF_VARS }}" > terraform.tfvars
      
      - name: Terraform Apply
        working-directory: ./terraform-code
        run: terraform apply -var="region=${{ inputs.AWS_REGION }}" -var="cluster_name=${{ inputs.CLUSTER_NAME }}" -auto-approve -input=false

  helm-install:
    name: Install Helm
    runs-on: ubuntu-latest
    needs: terraform-apply

    defaults:
      run:
        shell: bash
        working-directory: .

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Run aws auth
        uses: ./.github/composite-actions/aws-auth
        with:
          AWS_ROLE: ${{ secrets.AWS_ROLE }}
          AWS_REGION: ${{ inputs.AWS_REGION }}

      - name: Helm and kubectl setup
        uses: ./.github/composite-actions/helm-setup
        with:
          CLUSTER_NAME: ${{ inputs.CLUSTER_NAME }}
          AWS_REGION: ${{ inputs.AWS_REGION }}

      - name: Test Helm
        run: |
          helm upgrade --install ${{ inputs.HELM_REVISION_NAME }} javaWebApp-helm --debug --dry-run

      - name: Deploy Application using Helm
        run: |
          helm upgrade --install ${{ inputs.HELM_REVISION_NAME }} javaWebApp-helm --set image.repository="${{ secrets.ECR_URI }}/${{ inputs.ECR_REPO }}" --set image.tag=latest
